DROP PROCEDURE YKK.RTCS20;

CREATE OR REPLACE PROCEDURE YKK.RTCS20
		(
			IO_QTY			IN OUT	NUMBER,
			IO_RC			IN OUT	NUMBER,
			IO_MSGNO		IN OUT	NUMBER,
			IO_MSGDAT		IN OUT	VARCHAR2
		) IS






























DEF_MYNAME		CONSTANT VARCHAR2(10)	:= 'RTCS20' ;




WK_MSGBUFF		VARCHAR2(255) ;
WK_LOGMSG		VARCHAR2(255) ;


D_FNSYSTEM		FNSYSTEM%ROWTYPE ;


WK_RC			NUMBER(9,0) ;
WK_QTY			NUMBER(9,0) ;
WK_COUNT		NUMBER(9, 0) ;
WK_SYSNICHIJI	VARCHAR2(14) ;


























PROCEDURE RTCS20_10
(
	IO_RC			IN OUT	NUMBER,
	IO_MSGDAT		IN OUT	VARCHAR2
)
IS
BEGIN




	BEGIN
		SELECT
			FNSYSTEM.KEPT_FREESHELF_NUM
		INTO
			D_FNSYSTEM.KEPT_FREESHELF_NUM
		FROM
			FNSYSTEM
		WHERE
			FNSYSTEM.SYSNO		=	'1'		AND
			ROWNUM				=	1 ;

	EXCEPTION
		WHEN OTHERS THEN

			IF PA_AWC_DEFINE.NOTFOUND_NG = SQLCODE THEN
				IO_RC		:=	FUKKI.RET_DATNOT ;
				WK_MSGBUFF	:=	'SYSNO = 1';
				WK_LOGMSG	:=	SUBSTRB ((MSGCVT (GSC_MSGDEF.GMSG4003, 'FNSYSTEM', WK_MSGBUFF)),
											1, PA_AWC_DEFINE.DEF_MSGLENG) ;
				WK_RC		:=	LOGOUT('03', DEF_MYNAME, '11', WK_LOGMSG) ;

			ELSIF PA_AWC_DEFINE.DEADLOCK_NG = SQLCODE THEN
				IO_RC		:=	FUKKI.SQLDEADLOCK ;
				WK_LOGMSG	:=	SUBSTRB ((MSGCVT (GSC_MSGDEF.GMSG4002, 'FNSYSTEM')),
												1, PA_AWC_DEFINE.DEF_MSGLENG) ;
				WK_RC		:=	LOGOUT('03', DEF_MYNAME, '12', WK_LOGMSG) ;


			ELSE
				IO_RC		:=	FUKKI.RET_DBERR ;
				WK_LOGMSG	:=	SUBSTRB ((MSGCVT (GSC_MSGDEF.GMSG4001,
														'FNSYSTEM', TO_CHAR(SQLCODE))),
											1, PA_AWC_DEFINE.DEF_MSGLENG) ;
				WK_RC		:=	LOGOUT('04', DEF_MYNAME, '13', WK_LOGMSG) ;
			END IF ;

			IO_MSGDAT	:= WK_LOGMSG  ;
	END ;


<< RTCS20_10ENDLABEL >>
	NULL ;

EXCEPTION
	WHEN OTHERS THEN

		IO_RC		:=	FUKKI.RET_PROERR ;
		WK_LOGMSG	:=	SUBSTRB ((MSGCVT (GSC_MSGDEF.GMSG5001, DEF_MYNAME, TO_CHAR(SQLCODE))),
												1, PA_AWC_DEFINE.DEF_MSGLENG) ;
		WK_RC		:=	LOGOUT('04', DEF_MYNAME, '1Z', WK_LOGMSG) ;
		IO_MSGDAT	:= WK_LOGMSG  ;

END RTCS20_10 ;








BEGIN



	IO_RC			:=	FUKKI.RET_OK ;
	IO_MSGNO		:=	FUKKI.RET_OK ;
	IO_MSGDAT		:= ' ' ;
	WK_LOGMSG		:= ' ' ;
	WK_MSGBUFF		:=	RPAD(' ', 255, ' ') ;




	WK_SYSNICHIJI	:= SYSDATE14_GET() ;




	WK_QTY	:=	0 ;
	RTCS21 (WK_QTY, IO_RC, IO_MSGNO, WK_LOGMSG) ;
	IF IO_RC != FUKKI.RET_OK THEN
		GOTO	RTCS20_ENDLABEL ;
	END IF ;




	RTCS20_10 (IO_RC, WK_LOGMSG) ;
	IF IO_RC != FUKKI.RET_OK THEN
		GOTO	RTCS20_ENDLABEL ;
	END IF ;


DBMS_OUTPUT.PUT_LINE ('WK_QTY['|| TO_CHAR(WK_QTY) || ']') ;




	IF (0 > (WK_QTY -  D_FNSYSTEM.KEPT_FREESHELF_NUM))	THEN
		IO_QTY	:=	0 ;
	ELSE
		IO_QTY	:=	WK_QTY - D_FNSYSTEM.KEPT_FREESHELF_NUM	;
	END IF ;





<<RTCS20_ENDLABEL>>
	IF IO_RC != FUKKI.RET_OK THEN
		IO_MSGDAT := WK_LOGMSG ;
	ELSE
		IO_MSGDAT := ' ' ;
	END IF ;

EXCEPTION
	WHEN OTHERS THEN

		IO_RC		:=	FUKKI.RET_PROERR ;

		WK_LOGMSG	:= SUBSTRB ((MSGCVT (GSC_MSGDEF.GMSG5001, DEF_MYNAME, TO_CHAR(SQLCODE))),
									1, PA_AWC_DEFINE.DEF_MSGLENG) ;
		WK_RC		:= LOGOUT('04', DEF_MYNAME, 'EN', WK_LOGMSG) ;

		IO_MSGDAT	:=	WK_LOGMSG ;

END RTCS20 ;
/


