DROP PROCEDURE YKK.RTAS80;

CREATE OR REPLACE PROCEDURE YKK.RTAS80
		(
			IN_SOFTZONE		IN		VARCHAR2,
			IN_STNO_FROM	IN		VARCHAR2,
			IO_SOFTZONE		IN OUT	VARCHAR2,
			IO_STNO_TO		IN OUT	VARCHAR2,
			IO_SYOZAIKEY	IN OUT	VARCHAR2,
			IO_RC			IN OUT	NUMBER,
			IO_MSGNO		IN OUT	NUMBER,
			IO_MSGDAT		IN OUT	VARCHAR2
		) IS











































DEF_MYNAME		CONSTANT VARCHAR2(10)	:= 'RTAS80' ;

DEF_MYNAMEJP	CONSTANT VARCHAR2(60)	:= '?£¿I???£¿???' ;




WK_MSGBUFF		VARCHAR2(100) ;
WK_LOGMSG		VARCHAR2(100) ;


D_FNSOKO		FNSOKO%ROWTYPE ;
D_FNAILCTL		FNAILCTL%ROWTYPE ;
D_FNAKITANA		FNAKITANA%ROWTYPE ;
D_FNSTATION		FNSTATION%ROWTYPE ;


WK_STNO			FNSTATION.STNO%TYPE ;
WK_BANKNO		FNAKITANA.BANKNO%TYPE ;
WK_BAYNO		FNAKITANA.BAYNO%TYPE ;
WK_LEVELNO		FNAKITANA.LEVELNO%TYPE ;
WK_HARDZONE		FNAKITANA.HARDZONE%TYPE ;


WK_RC			NUMBER(9, 0) ;
WK_SYSDATE		VARCHAR2(8) ;
WK_KBN			VARCHAR2(1) ;
WK_SYSNICHIJI	VARCHAR2(14) ;
WK_CNTBAY		NUMBER(9, 0) ;
WK_CNTLEV		NUMBER(9, 0) ;







BEGIN



	IO_RC			:=	FUKKI.RET_OK ;
	IO_MSGDAT		:=	' ' ;
	WK_MSGBUFF		:=	RPAD(' ', 100, ' ') ;




	RTAS82 (PA_AWC_DEFINE.SOKOKBN_DEFAULT, PA_AWC_DEFINE.HARDZONE_DEFAULT, IN_SOFTZONE,
		IN_STNO_FROM, IO_STNO_TO, WK_HARDZONE, IO_SOFTZONE, IO_SYOZAIKEY, IO_RC, WK_LOGMSG ) ;
	IF IO_RC  = FUKKI.RET_OK	THEN
		IO_MSGNO := 0 ;
	ELSE
		IO_MSGNO := IO_RC ;
	END IF ;






<<RTAS80_ENDLABEL>>
	IF IO_RC != FUKKI.RET_OK THEN
		IO_MSGDAT	:= WK_LOGMSG ;
	ELSE
		IO_MSGDAT	:= ' ' ;
	END IF ;






EXCEPTION
	WHEN OTHERS THEN

		IO_RC		:=	FUKKI.RET_FUNERR ;
		WK_LOGMSG	:=	SUBSTRB ((MSGCVT (GSC_MSGDEF.GMSG5001, DEF_MYNAME, TO_CHAR(SQLCODE))),
										1, PA_AWC_DEFINE.DEF_MSGLENG) ;
		WK_RC		:=	LOGOUT('04', DEF_MYNAME, 'EN', WK_LOGMSG) ;
		IO_MSGNO := 0 ;
		IO_MSGDAT	:=	WK_LOGMSG ;

END RTAS80 ;
/


