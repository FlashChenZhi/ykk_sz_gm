//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
// 
//             Powered By： SR3.1(SmartRobot For SmartPersistenceLayer 3.1) 听棠
//             Created By： Administrator
//             Created Time： 2008-1-7 11:31:43
// 
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;


    /// <summary>该类的摘要说明</summary>
    [Serializable()]
    public class FNSYSTEMEntity : EntityObject
    {

        /// <summary>SYSNO</summary>
        public const string __SYSNO = "SYSNO";

        /// <summary>SYSNAME</summary>
        public const string __SYSNAME = "SYSNAME";

        /// <summary>SYSHIJI</summary>
        public const string __SYSHIJI = "SYSHIJI";

        /// <summary>BATCH_FLAG</summary>
        public const string __BATCH_FLAG = "BATCH_FLAG";

        /// <summary>AUTO_SPLIT_FLAG</summary>
        public const string __AUTO_SPLIT_FLAG = "AUTO_SPLIT_FLAG";

        /// <summary>KEPT_FREESHELF_NUM</summary>
        public const string __KEPT_FREESHELF_NUM = "KEPT_FREESHELF_NUM";

        /// <summary>PICKING_PER</summary>
        public const string __PICKING_PER = "PICKING_PER";

        /// <summary>REV_PICKING_LOWLIMIT</summary>
        public const string __REV_PICKING_LOWLIMIT = "REV_PICKING_LOWLIMIT";

        /// <summary>DEST_WAITTING_TIME</summary>
        public const string __DEST_WAITTING_TIME = "DEST_WAITTING_TIME";

        public const string __BAG_WEIGHT = "BAG_WEIGHT";

        public const string __CHECK_DATE = "CHECK_DATE";

        public const string __TRX00_FLG = "TRX00_FLG";

        public const string __TRY00_FLG = "TRY00_FLG";

        public const string __TRZ00_FLG = "TRZ00_FLG";

        public const string __WORK_FILE_FLG = "WORK_FILE_FLG";

        public const string __RETRIEVAL_CANCEL_FLG = "RETRIEVAL_CANCEL_FLG";

        private string m_SYSNO;

        private string m_SYSNAME;

        private string m_SYSHIJI;

        private string m_BATCH_FLAG;

        private string m_AUTO_SPLIT_FLAG;

        private System.Decimal m_KEPT_FREESHELF_NUM;

        private System.Decimal m_PICKING_PER;

        private System.Decimal m_REV_PICKING_LOWLIMIT;

        private System.Decimal m_DEST_WAITTING_TIME;

        private System.Decimal m_BAG_WEIGHT;

        private string m_CHECK_DATE;

        private string m_TRX00_FLG;

        private string m_TRY00_FLG;

        private string m_TRZ00_FLG;

        private string m_WORK_FILE_FLG;

        private string m_RETRIEVAL_CANCEL_FLG;

        /// <summary>构造函数</summary>
        public FNSYSTEMEntity()
        {
        }

        /// <summary>属性SYSNO </summary>
        public string SYSNO
        {
            get
            {
                return this.m_SYSNO;
            }
            set
            {
                this.m_SYSNO = value;
            }
        }

        /// <summary>属性SYSNAME </summary>
        public string SYSNAME
        {
            get
            {
                return this.m_SYSNAME;
            }
            set
            {
                this.m_SYSNAME = value;
            }
        }

        /// <summary>属性SYSHIJI </summary>
        public string SYSHIJI
        {
            get
            {
                return this.m_SYSHIJI;
            }
            set
            {
                this.m_SYSHIJI = value;
            }
        }

        /// <summary>属性BATCH_FLAG </summary>
        public string BATCH_FLAG
        {
            get
            {
                return this.m_BATCH_FLAG;
            }
            set
            {
                this.m_BATCH_FLAG = value;
            }
        }

        /// <summary>属性AUTO_SPLIT_FLAG </summary>
        public string AUTO_SPLIT_FLAG
        {
            get
            {
                return this.m_AUTO_SPLIT_FLAG;
            }
            set
            {
                this.m_AUTO_SPLIT_FLAG = value;
            }
        }

        /// <summary>属性KEPT_FREESHELF_NUM </summary>
        public System.Decimal KEPT_FREESHELF_NUM
        {
            get
            {
                return this.m_KEPT_FREESHELF_NUM;
            }
            set
            {
                this.m_KEPT_FREESHELF_NUM = value;
            }
        }

        /// <summary>属性PICKING_PER </summary>
        public System.Decimal PICKING_PER
        {
            get
            {
                return this.m_PICKING_PER;
            }
            set
            {
                this.m_PICKING_PER = value;
            }
        }

        /// <summary>属性REV_PICKING_LOWLIMIT </summary>
        public System.Decimal REV_PICKING_LOWLIMIT
        {
            get
            {
                return this.m_REV_PICKING_LOWLIMIT;
            }
            set
            {
                this.m_REV_PICKING_LOWLIMIT = value;
            }
        }

        /// <summary>属性DEST_WAITTING_TIME </summary>
        public System.Decimal DEST_WAITTING_TIME
        {
            get
            {
                return this.m_DEST_WAITTING_TIME;
            }
            set
            {
                this.m_DEST_WAITTING_TIME = value;
            }
        }

        public System.Decimal BAG_WEIGHT
        {
            get
            {
                return this.m_BAG_WEIGHT;
            }
            set
            {
                this.m_BAG_WEIGHT = value;
            }
        }

        public string RETRIEVAL_CANCEL_FLG
        {
            get
            {
                return this.m_RETRIEVAL_CANCEL_FLG;
            }
            set
            {
                this.m_RETRIEVAL_CANCEL_FLG = value;
            }
        }

        public string WORK_FILE_FLG
        {
            get
            {
                return this.m_WORK_FILE_FLG;
            }
            set
            {
                this.m_WORK_FILE_FLG = value;
            }
        }

        public string TRZ00_FLG
        {
            get
            {
                return this.m_TRZ00_FLG;
            }
            set
            {
                this.m_TRZ00_FLG = value;
            }
        }

        public string TRY00_FLG
        {
            get
            {
                return this.m_TRY00_FLG;
            }
            set
            {
                this.m_TRY00_FLG = value;
            }
        }

        public string TRX00_FLG
        {
            get
            {
                return this.m_TRX00_FLG;
            }
            set
            {
                this.m_TRX00_FLG = value;
            }
        }


        public string CHECK_DATE
        {
            get
            {
                return this.m_CHECK_DATE;
            }
            set
            {
                this.m_CHECK_DATE = value;
            }
        }
    }

    /// FNSYSTEMEntity执行类
    public abstract class FNSYSTEMEntityAction
    {

        private FNSYSTEMEntityAction()
        {
        }

        public static void Save(FNSYSTEMEntity obj)
        {
            if (obj != null)
            {
                obj.Save();
            }
        }

        /// <summary>根据主键获取一个实体</summary>
        public static FNSYSTEMEntity RetrieveAFNSYSTEMEntity()
        {
            FNSYSTEMEntity obj = new FNSYSTEMEntity();
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }

        /// <summary>获取所有实体(EntityContainer)</summary>
        public static EntityContainer RetrieveFNSYSTEMEntity()
        {
            RetrieveCriteria rc = new RetrieveCriteria(typeof(FNSYSTEMEntity));
            return rc.AsEntityContainer();
        }

        /// <summary>获取所有实体(EntityContainer)</summary>
        public static DataTable GetFNSYSTEMEntity()
        {
            RetrieveCriteria rc = new RetrieveCriteria(typeof(FNSYSTEMEntity));
            return rc.AsDataTable();
        }
    }
}
