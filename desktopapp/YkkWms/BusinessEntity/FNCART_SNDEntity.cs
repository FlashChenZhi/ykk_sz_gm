//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
// 
//             Powered By： SR3.1(SmartRobot For SmartPersistenceLayer 3.1) 听棠
//             Created By： Administrator
//             Created Time： 2008-1-7 11:31:43
// 
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>该类的摘要说明</summary>
    [Serializable()]
    public class FNCART_SNDEntity : EntityObject
    {
        
        /// <summary>STNO</summary>
        public const string __STNO = "STNO";
        
        /// <summary>REGISTER_DATE_TIME</summary>
        public const string __REGISTER_DATE_TIME = "REGISTER_DATE_TIME";
        
        /// <summary>SEQ_NO</summary>
        public const string __SEQ_NO = "SEQ_NO";
        
        /// <summary>REPLACE_FLAG</summary>
        public const string __REPLACE_FLAG = "REPLACE_FLAG";
        
        /// <summary>TRANS_FLAG</summary>
        public const string __TRANS_FLAG = "TRANS_FLAG";
        
        private string m_STNO;
        
        private string m_REGISTER_DATE_TIME;
        
        private string m_SEQ_NO;
        
        private string m_REPLACE_FLAG;
        
        private string m_TRANS_FLAG;
        
        /// <summary>构造函数</summary>
        public FNCART_SNDEntity()
        {
        }
        
        /// <summary>属性STNO </summary>
        public string STNO
        {
            get
            {
                return this.m_STNO;
            }
            set
            {
                this.m_STNO = value;
            }
        }
        
        /// <summary>属性REGISTER_DATE_TIME </summary>
        public string REGISTER_DATE_TIME
        {
            get
            {
                return this.m_REGISTER_DATE_TIME;
            }
            set
            {
                this.m_REGISTER_DATE_TIME = value;
            }
        }
        
        /// <summary>属性SEQ_NO </summary>
        public string SEQ_NO
        {
            get
            {
                return this.m_SEQ_NO;
            }
            set
            {
                this.m_SEQ_NO = value;
            }
        }
        
        /// <summary>属性REPLACE_FLAG </summary>
        public string REPLACE_FLAG
        {
            get
            {
                return this.m_REPLACE_FLAG;
            }
            set
            {
                this.m_REPLACE_FLAG = value;
            }
        }
        
        /// <summary>属性TRANS_FLAG </summary>
        public string TRANS_FLAG
        {
            get
            {
                return this.m_TRANS_FLAG;
            }
            set
            {
                this.m_TRANS_FLAG = value;
            }
        }
    }
    
    /// FNCART_SNDEntity执行类
    public abstract class FNCART_SNDEntityAction
    {
        
        private FNCART_SNDEntityAction()
        {
        }
        
        public static void Save(FNCART_SNDEntity obj)
        {
            if (obj!=null)
            {
                obj.Save();
            }
        }
        
        /// <summary>根据主键获取一个实体</summary>
        public static FNCART_SNDEntity RetrieveAFNCART_SNDEntity()
        {
            FNCART_SNDEntity obj=new FNCART_SNDEntity();
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static EntityContainer RetrieveFNCART_SNDEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FNCART_SNDEntity));
            return rc.AsEntityContainer();
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static DataTable GetFNCART_SNDEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FNCART_SNDEntity));
            return rc.AsDataTable();
        }
    }
}
