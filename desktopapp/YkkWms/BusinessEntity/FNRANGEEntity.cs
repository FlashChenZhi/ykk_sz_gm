//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
// 
//             Powered By： SR3.1(SmartRobot For SmartPersistenceLayer 3.1) 听棠
//             Created By： Administrator
//             Created Time： 2008-1-7 11:31:43
// 
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>该类的摘要说明</summary>
    [Serializable()]
    public class FNRANGEEntity : EntityObject
    {
        
        /// <summary>TERMNO</summary>
        public const string __TERMNO = "TERMNO";
        
        /// <summary>MADE_SECTION</summary>
        public const string __MADE_SECTION = "MADE_SECTION";
        
        /// <summary>MADE_LINE</summary>
        public const string __MADE_LINE = "MADE_LINE";
        
        /// <summary>UNIT_WEIGHT_UPPER</summary>
        public const string __UNIT_WEIGHT_UPPER = "UNIT_WEIGHT_UPPER";
        
        /// <summary>UNIT_WEIGHT_LOWER</summary>
        public const string __UNIT_WEIGHT_LOWER = "UNIT_WEIGHT_LOWER";
        
        /// <summary>STORAGE_UPPER</summary>
        public const string __STORAGE_UPPER = "STORAGE_UPPER";
        
        /// <summary>STORAGE_LOWER</summary>
        public const string __STORAGE_LOWER = "STORAGE_LOWER";
        
        /// <summary>SHIP_UPPER</summary>
        public const string __SHIP_UPPER = "SHIP_UPPER";
        
        /// <summary>SHIP_LOWER</summary>
        public const string __SHIP_LOWER = "SHIP_LOWER";
        
        private string m_TERMNO;
        
        private string m_MADE_SECTION;
        
        private string m_MADE_LINE;
        
        private System.Decimal m_UNIT_WEIGHT_UPPER;
        
        private System.Decimal m_UNIT_WEIGHT_LOWER;
        
        private System.Decimal m_STORAGE_UPPER;
        
        private System.Decimal m_STORAGE_LOWER;
        
        private System.Decimal m_SHIP_UPPER;
        
        private System.Decimal m_SHIP_LOWER;
        
        /// <summary>构造函数</summary>
        public FNRANGEEntity()
        {
        }
        
        /// <summary>属性TERMNO </summary>
        public string TERMNO
        {
            get
            {
                return this.m_TERMNO;
            }
            set
            {
                this.m_TERMNO = value;
            }
        }
        
        /// <summary>属性MADE_SECTION </summary>
        public string MADE_SECTION
        {
            get
            {
                return this.m_MADE_SECTION;
            }
            set
            {
                this.m_MADE_SECTION = value;
            }
        }
        
        /// <summary>属性MADE_LINE </summary>
        public string MADE_LINE
        {
            get
            {
                return this.m_MADE_LINE;
            }
            set
            {
                this.m_MADE_LINE = value;
            }
        }
        
        /// <summary>属性UNIT_WEIGHT_UPPER </summary>
        public System.Decimal UNIT_WEIGHT_UPPER
        {
            get
            {
                return this.m_UNIT_WEIGHT_UPPER;
            }
            set
            {
                this.m_UNIT_WEIGHT_UPPER = value;
            }
        }
        
        /// <summary>属性UNIT_WEIGHT_LOWER </summary>
        public System.Decimal UNIT_WEIGHT_LOWER
        {
            get
            {
                return this.m_UNIT_WEIGHT_LOWER;
            }
            set
            {
                this.m_UNIT_WEIGHT_LOWER = value;
            }
        }
        
        /// <summary>属性STORAGE_UPPER </summary>
        public System.Decimal STORAGE_UPPER
        {
            get
            {
                return this.m_STORAGE_UPPER;
            }
            set
            {
                this.m_STORAGE_UPPER = value;
            }
        }
        
        /// <summary>属性STORAGE_LOWER </summary>
        public System.Decimal STORAGE_LOWER
        {
            get
            {
                return this.m_STORAGE_LOWER;
            }
            set
            {
                this.m_STORAGE_LOWER = value;
            }
        }
        
        /// <summary>属性SHIP_UPPER </summary>
        public System.Decimal SHIP_UPPER
        {
            get
            {
                return this.m_SHIP_UPPER;
            }
            set
            {
                this.m_SHIP_UPPER = value;
            }
        }
        
        /// <summary>属性SHIP_LOWER </summary>
        public System.Decimal SHIP_LOWER
        {
            get
            {
                return this.m_SHIP_LOWER;
            }
            set
            {
                this.m_SHIP_LOWER = value;
            }
        }
    }
    
    /// FNRANGEEntity执行类
    public abstract class FNRANGEEntityAction
    {
        
        private FNRANGEEntityAction()
        {
        }
        
        public static void Save(FNRANGEEntity obj)
        {
            if (obj!=null)
            {
                obj.Save();
            }
        }
        
        /// <summary>根据主键获取一个实体</summary>
        public static FNRANGEEntity RetrieveAFNRANGEEntity()
        {
            FNRANGEEntity obj=new FNRANGEEntity();
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static EntityContainer RetrieveFNRANGEEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FNRANGEEntity));
            return rc.AsEntityContainer();
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static DataTable GetFNRANGEEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FNRANGEEntity));
            return rc.AsDataTable();
        }
    }
}
