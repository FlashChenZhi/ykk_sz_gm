//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
// 
//             Powered By： SR3.1(SmartRobot For SmartPersistenceLayer 3.1) 听棠
//             Created By： Administrator
//             Created Time： 2008-1-7 11:31:43
// 
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>该类的摘要说明</summary>
    [Serializable()]
    public class FUNCTIONMAPEntity : EntityObject
    {
        
        /// <summary>FUNCTIONID</summary>
        public const string __FUNCTIONID = "FUNCTIONID";
        
        /// <summary>MAINFUNCTIONID</summary>
        public const string __MAINFUNCTIONID = "MAINFUNCTIONID";
        
        /// <summary>BUTTONDISPNUMBER</summary>
        public const string __BUTTONDISPNUMBER = "BUTTONDISPNUMBER";
        
        /// <summary>BUTTONRESOURCEKEY</summary>
        public const string __BUTTONRESOURCEKEY = "BUTTONRESOURCEKEY";
        
        /// <summary>PAGENAMERESOURCEKEY</summary>
        public const string __PAGENAMERESOURCEKEY = "PAGENAMERESOURCEKEY";
        
        /// <summary>DOAUTHENTICATION</summary>
        public const string __DOAUTHENTICATION = "DOAUTHENTICATION";
        
        /// <summary>URI</summary>
        public const string __URI = "URI";
        
        /// <summary>FRAMENAME</summary>
        public const string __FRAMENAME = "FRAMENAME";
        
        /// <summary>UPDATEDATE</summary>
        public const string __UPDATEDATE = "UPDATEDATE";
        
        private string m_FUNCTIONID;
        
        private string m_MAINFUNCTIONID;
        
        private System.Decimal m_BUTTONDISPNUMBER;
        
        private string m_BUTTONRESOURCEKEY;
        
        private string m_PAGENAMERESOURCEKEY;
        
        private System.Decimal m_DOAUTHENTICATION;
        
        private string m_URI;
        
        private string m_FRAMENAME;
        
        private System.DateTime m_UPDATEDATE = DateTime.MinValue;
        
        /// <summary>构造函数</summary>
        public FUNCTIONMAPEntity()
        {
        }
        
        /// <summary>属性FUNCTIONID </summary>
        public string FUNCTIONID
        {
            get
            {
                return this.m_FUNCTIONID;
            }
            set
            {
                this.m_FUNCTIONID = value;
            }
        }
        
        /// <summary>属性MAINFUNCTIONID </summary>
        public string MAINFUNCTIONID
        {
            get
            {
                return this.m_MAINFUNCTIONID;
            }
            set
            {
                this.m_MAINFUNCTIONID = value;
            }
        }
        
        /// <summary>属性BUTTONDISPNUMBER </summary>
        public System.Decimal BUTTONDISPNUMBER
        {
            get
            {
                return this.m_BUTTONDISPNUMBER;
            }
            set
            {
                this.m_BUTTONDISPNUMBER = value;
            }
        }
        
        /// <summary>属性BUTTONRESOURCEKEY </summary>
        public string BUTTONRESOURCEKEY
        {
            get
            {
                return this.m_BUTTONRESOURCEKEY;
            }
            set
            {
                this.m_BUTTONRESOURCEKEY = value;
            }
        }
        
        /// <summary>属性PAGENAMERESOURCEKEY </summary>
        public string PAGENAMERESOURCEKEY
        {
            get
            {
                return this.m_PAGENAMERESOURCEKEY;
            }
            set
            {
                this.m_PAGENAMERESOURCEKEY = value;
            }
        }
        
        /// <summary>属性DOAUTHENTICATION </summary>
        public System.Decimal DOAUTHENTICATION
        {
            get
            {
                return this.m_DOAUTHENTICATION;
            }
            set
            {
                this.m_DOAUTHENTICATION = value;
            }
        }
        
        /// <summary>属性URI </summary>
        public string URI
        {
            get
            {
                return this.m_URI;
            }
            set
            {
                this.m_URI = value;
            }
        }
        
        /// <summary>属性FRAMENAME </summary>
        public string FRAMENAME
        {
            get
            {
                return this.m_FRAMENAME;
            }
            set
            {
                this.m_FRAMENAME = value;
            }
        }
        
        /// <summary>属性UPDATEDATE </summary>
        public System.DateTime UPDATEDATE
        {
            get
            {
                return this.m_UPDATEDATE;
            }
            set
            {
                this.m_UPDATEDATE = value;
            }
        }
    }
    
    /// FUNCTIONMAPEntity执行类
    public abstract class FUNCTIONMAPEntityAction
    {
        
        private FUNCTIONMAPEntityAction()
        {
        }
        
        public static void Save(FUNCTIONMAPEntity obj)
        {
            if (obj!=null)
            {
                obj.Save();
            }
        }
        
        /// <summary>根据主键获取一个实体</summary>
        public static FUNCTIONMAPEntity RetrieveAFUNCTIONMAPEntity(string FUNCTIONID)
        {
            FUNCTIONMAPEntity obj=new FUNCTIONMAPEntity();
            obj.FUNCTIONID=FUNCTIONID;
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static EntityContainer RetrieveFUNCTIONMAPEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FUNCTIONMAPEntity));
            return rc.AsEntityContainer();
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static DataTable GetFUNCTIONMAPEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FUNCTIONMAPEntity));
            return rc.AsDataTable();
        }
    }
}
