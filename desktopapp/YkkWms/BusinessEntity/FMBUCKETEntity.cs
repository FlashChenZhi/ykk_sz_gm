//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
// 
//             Powered By： SR3.1(SmartRobot For SmartPersistenceLayer 3.1) 听棠
//             Created By： Administrator
//             Created Time： 2008-1-7 11:31:43
// 
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>该类的摘要说明</summary>
    [Serializable()]
    public class FMBUCKETEntity : EntityObject
    {
        
        /// <summary>BUCKET_NO</summary>
        public const string __BUCKET_NO = "BUCKET_NO";
        
        /// <summary>PACKING_WEIGHT</summary>
        public const string __PACKING_WEIGHT = "PACKING_WEIGHT";
        
        /// <summary>HEIGHT_FLAG</summary>
        public const string __HEIGHT_FLAG = "HEIGHT_FLAG";
        
        /// <summary>LASTUPDATE_DATETIME</summary>
        public const string __LASTUPDATE_DATETIME = "LASTUPDATE_DATETIME";
        
        private string m_BUCKET_NO;
        
        private System.Decimal m_PACKING_WEIGHT;
        
        private string m_HEIGHT_FLAG;
        
        private string m_LASTUPDATE_DATETIME;
        
        /// <summary>构造函数</summary>
        public FMBUCKETEntity()
        {
        }
        
        /// <summary>属性BUCKET_NO </summary>
        public string BUCKET_NO
        {
            get
            {
                return this.m_BUCKET_NO;
            }
            set
            {
                this.m_BUCKET_NO = value;
            }
        }
        
        /// <summary>属性PACKING_WEIGHT </summary>
        public System.Decimal PACKING_WEIGHT
        {
            get
            {
                return this.m_PACKING_WEIGHT;
            }
            set
            {
                this.m_PACKING_WEIGHT = value;
            }
        }
        
        /// <summary>属性HEIGHT_FLAG </summary>
        public string HEIGHT_FLAG
        {
            get
            {
                return this.m_HEIGHT_FLAG;
            }
            set
            {
                this.m_HEIGHT_FLAG = value;
            }
        }
        
        /// <summary>属性LASTUPDATE_DATETIME </summary>
        public string LASTUPDATE_DATETIME
        {
            get
            {
                return this.m_LASTUPDATE_DATETIME;
            }
            set
            {
                this.m_LASTUPDATE_DATETIME = value;
            }
        }
    }
    
    /// FMBUCKETEntity执行类
    public abstract class FMBUCKETEntityAction
    {
        
        private FMBUCKETEntityAction()
        {
        }
        
        public static void Save(FMBUCKETEntity obj)
        {
            if (obj!=null)
            {
                obj.Save();
            }
        }
        
        /// <summary>根据主键获取一个实体</summary>
        public static FMBUCKETEntity RetrieveAFMBUCKETEntity(string BUCKET_NO)
        {
            FMBUCKETEntity obj=new FMBUCKETEntity();
            obj.BUCKET_NO=BUCKET_NO;
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static EntityContainer RetrieveFMBUCKETEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FMBUCKETEntity));
            return rc.AsEntityContainer();
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static DataTable GetFMBUCKETEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FMBUCKETEntity));
            return rc.AsDataTable();
        }
    }
}
