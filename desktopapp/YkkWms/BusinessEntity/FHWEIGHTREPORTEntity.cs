//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
// 
//             Powered By： SR3.1(SmartRobot For SmartPersistenceLayer 3.1) 听棠
//             Created By： Administrator
//             Created Time： 2008-1-7 11:31:43
// 
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>该类的摘要说明</summary>
    [Serializable()]
    public class FHWEIGHTREPORTEntity : EntityObject
    {
        
        /// <summary>TICKET_NO</summary>
        public const string __TICKET_NO = "TICKET_NO";
        
        /// <summary>WEIGHT_FLAG</summary>
        public const string __WEIGHT_FLAG = "WEIGHT_FLAG";
        
        /// <summary>STOCK_UNIT_WEIGHT</summary>
        public const string __STOCK_UNIT_WEIGHT = "STOCK_UNIT_WEIGHT";
        
        /// <summary>MEASURE_QTY</summary>
        public const string __MEASURE_QTY = "MEASURE_QTY";
        
        /// <summary>MEASURE_WEIGHT</summary>
        public const string __MEASURE_WEIGHT = "MEASURE_WEIGHT";
        
        /// <summary>MOVE_FLAG</summary>
        public const string __MOVE_FLAG = "MOVE_FLAG";
        
        /// <summary>PENDING_FLAG</summary>
        public const string __PENDING_FLAG = "PENDING_FLAG";
        
        /// <summary>PROC_FLAG</summary>
        public const string __PROC_FLAG = "PROC_FLAG";
        
        /// <summary>REGISTER_DATE</summary>
        public const string __REGISTER_DATE = "REGISTER_DATE";
        
        /// <summary>REGISTER_TIME</summary>
        public const string __REGISTER_TIME = "REGISTER_TIME";
        
        private string m_TICKET_NO;
        
        private string m_WEIGHT_FLAG;
        
        private System.Decimal m_STOCK_UNIT_WEIGHT;
        
        private System.Decimal m_MEASURE_QTY;
        
        private System.Decimal m_MEASURE_WEIGHT;
        
        private string m_MOVE_FLAG;
        
        private string m_PENDING_FLAG;
        
        private string m_PROC_FLAG;
        
        private string m_REGISTER_DATE;
        
        private string m_REGISTER_TIME;
        
        /// <summary>构造函数</summary>
        public FHWEIGHTREPORTEntity()
        {
        }
        
        /// <summary>属性TICKET_NO </summary>
        public string TICKET_NO
        {
            get
            {
                return this.m_TICKET_NO;
            }
            set
            {
                this.m_TICKET_NO = value;
            }
        }
        
        /// <summary>属性WEIGHT_FLAG </summary>
        public string WEIGHT_FLAG
        {
            get
            {
                return this.m_WEIGHT_FLAG;
            }
            set
            {
                this.m_WEIGHT_FLAG = value;
            }
        }
        
        /// <summary>属性STOCK_UNIT_WEIGHT </summary>
        public System.Decimal STOCK_UNIT_WEIGHT
        {
            get
            {
                return this.m_STOCK_UNIT_WEIGHT;
            }
            set
            {
                this.m_STOCK_UNIT_WEIGHT = value;
            }
        }
        
        /// <summary>属性MEASURE_QTY </summary>
        public System.Decimal MEASURE_QTY
        {
            get
            {
                return this.m_MEASURE_QTY;
            }
            set
            {
                this.m_MEASURE_QTY = value;
            }
        }
        
        /// <summary>属性MEASURE_WEIGHT </summary>
        public System.Decimal MEASURE_WEIGHT
        {
            get
            {
                return this.m_MEASURE_WEIGHT;
            }
            set
            {
                this.m_MEASURE_WEIGHT = value;
            }
        }
        
        /// <summary>属性MOVE_FLAG </summary>
        public string MOVE_FLAG
        {
            get
            {
                return this.m_MOVE_FLAG;
            }
            set
            {
                this.m_MOVE_FLAG = value;
            }
        }
        
        /// <summary>属性PENDING_FLAG </summary>
        public string PENDING_FLAG
        {
            get
            {
                return this.m_PENDING_FLAG;
            }
            set
            {
                this.m_PENDING_FLAG = value;
            }
        }
        
        /// <summary>属性PROC_FLAG </summary>
        public string PROC_FLAG
        {
            get
            {
                return this.m_PROC_FLAG;
            }
            set
            {
                this.m_PROC_FLAG = value;
            }
        }
        
        /// <summary>属性REGISTER_DATE </summary>
        public string REGISTER_DATE
        {
            get
            {
                return this.m_REGISTER_DATE;
            }
            set
            {
                this.m_REGISTER_DATE = value;
            }
        }
        
        /// <summary>属性REGISTER_TIME </summary>
        public string REGISTER_TIME
        {
            get
            {
                return this.m_REGISTER_TIME;
            }
            set
            {
                this.m_REGISTER_TIME = value;
            }
        }
    }
    
    /// FHWEIGHTREPORTEntity执行类
    public abstract class FHWEIGHTREPORTEntityAction
    {
        
        private FHWEIGHTREPORTEntityAction()
        {
        }
        
        public static void Save(FHWEIGHTREPORTEntity obj)
        {
            if (obj!=null)
            {
                obj.Save();
            }
        }
        
        /// <summary>根据主键获取一个实体</summary>
        public static FHWEIGHTREPORTEntity RetrieveAFHWEIGHTREPORTEntity()
        {
            FHWEIGHTREPORTEntity obj=new FHWEIGHTREPORTEntity();
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static EntityContainer RetrieveFHWEIGHTREPORTEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FHWEIGHTREPORTEntity));
            return rc.AsEntityContainer();
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static DataTable GetFHWEIGHTREPORTEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FHWEIGHTREPORTEntity));
            return rc.AsDataTable();
        }
    }
}
