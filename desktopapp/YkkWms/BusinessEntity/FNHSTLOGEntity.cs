//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
// 
//             Powered By： SR3.1(SmartRobot For SmartPersistenceLayer 3.1) 听棠
//             Created By： Administrator
//             Created Time： 2008-1-7 11:31:43
// 
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>该类的摘要说明</summary>
    [Serializable()]
    public class FNHSTLOGEntity : EntityObject
    {
        
        /// <summary>TRANSFER_DATETIME</summary>
        public const string __TRANSFER_DATETIME = "TRANSFER_DATETIME";
        
        /// <summary>TRANSFER_FLAG</summary>
        public const string __TRANSFER_FLAG = "TRANSFER_FLAG";
        
        /// <summary>TEXT_ID</summary>
        public const string __TEXT_ID = "TEXT_ID";
        
        /// <summary>DATA</summary>
        public const string __DATA = "DATA";
        
        /// <summary>ERR_KBN</summary>
        public const string __ERR_KBN = "ERR_KBN";
        
        /// <summary>HOST_TABLE</summary>
        public const string __HOST_TABLE = "HOST_TABLE";
        
        private string m_TRANSFER_DATETIME;
        
        private string m_TRANSFER_FLAG;
        
        private string m_TEXT_ID;
        
        private string m_DATA;
        
        private string m_ERR_KBN;
        
        private string m_HOST_TABLE;
        
        /// <summary>构造函数</summary>
        public FNHSTLOGEntity()
        {
        }
        
        /// <summary>属性TRANSFER_DATETIME </summary>
        public string TRANSFER_DATETIME
        {
            get
            {
                return this.m_TRANSFER_DATETIME;
            }
            set
            {
                this.m_TRANSFER_DATETIME = value;
            }
        }
        
        /// <summary>属性TRANSFER_FLAG </summary>
        public string TRANSFER_FLAG
        {
            get
            {
                return this.m_TRANSFER_FLAG;
            }
            set
            {
                this.m_TRANSFER_FLAG = value;
            }
        }
        
        /// <summary>属性TEXT_ID </summary>
        public string TEXT_ID
        {
            get
            {
                return this.m_TEXT_ID;
            }
            set
            {
                this.m_TEXT_ID = value;
            }
        }
        
        /// <summary>属性DATA </summary>
        public string DATA
        {
            get
            {
                return this.m_DATA;
            }
            set
            {
                this.m_DATA = value;
            }
        }
        
        /// <summary>属性ERR_KBN </summary>
        public string ERR_KBN
        {
            get
            {
                return this.m_ERR_KBN;
            }
            set
            {
                this.m_ERR_KBN = value;
            }
        }
        
        /// <summary>属性HOST_TABLE </summary>
        public string HOST_TABLE
        {
            get
            {
                return this.m_HOST_TABLE;
            }
            set
            {
                this.m_HOST_TABLE = value;
            }
        }
    }
    
    /// FNHSTLOGEntity执行类
    public abstract class FNHSTLOGEntityAction
    {
        
        private FNHSTLOGEntityAction()
        {
        }
        
        public static void Save(FNHSTLOGEntity obj)
        {
            if (obj!=null)
            {
                obj.Save();
            }
        }
        
        /// <summary>根据主键获取一个实体</summary>
        public static FNHSTLOGEntity RetrieveAFNHSTLOGEntity()
        {
            FNHSTLOGEntity obj=new FNHSTLOGEntity();
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static EntityContainer RetrieveFNHSTLOGEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FNHSTLOGEntity));
            return rc.AsEntityContainer();
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static DataTable GetFNHSTLOGEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FNHSTLOGEntity));
            return rc.AsDataTable();
        }
    }
}
