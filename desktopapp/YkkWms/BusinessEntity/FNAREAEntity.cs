//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
// 
//             Powered By： SR3.1(SmartRobot For SmartPersistenceLayer 3.1) 听棠
//             Created By： Administrator
//             Created Time： 2008-1-7 11:31:43
// 
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>该类的摘要说明</summary>
    [Serializable()]
    public class FNAREAEntity : EntityObject
    {
        
        /// <summary>ARCNO</summary>
        public const string __ARCNO = "ARCNO";
        
        /// <summary>SYSTEMFLG</summary>
        public const string __SYSTEMFLG = "SYSTEMFLG";
        
        /// <summary>BACHIFLG</summary>
        public const string __BACHIFLG = "BACHIFLG";
        
        /// <summary>RECOVERFLG</summary>
        public const string __RECOVERFLG = "RECOVERFLG";
        
        /// <summary>CONTROLLER</summary>
        public const string __CONTROLLER = "CONTROLLER";
        
        private string m_ARCNO;
        
        private string m_SYSTEMFLG;
        
        private string m_BACHIFLG;
        
        private string m_RECOVERFLG;
        
        private string m_CONTROLLER;
        
        /// <summary>构造函数</summary>
        public FNAREAEntity()
        {
        }
        
        /// <summary>属性ARCNO </summary>
        public string ARCNO
        {
            get
            {
                return this.m_ARCNO;
            }
            set
            {
                this.m_ARCNO = value;
            }
        }
        
        /// <summary>属性SYSTEMFLG </summary>
        public string SYSTEMFLG
        {
            get
            {
                return this.m_SYSTEMFLG;
            }
            set
            {
                this.m_SYSTEMFLG = value;
            }
        }
        
        /// <summary>属性BACHIFLG </summary>
        public string BACHIFLG
        {
            get
            {
                return this.m_BACHIFLG;
            }
            set
            {
                this.m_BACHIFLG = value;
            }
        }
        
        /// <summary>属性RECOVERFLG </summary>
        public string RECOVERFLG
        {
            get
            {
                return this.m_RECOVERFLG;
            }
            set
            {
                this.m_RECOVERFLG = value;
            }
        }
        
        /// <summary>属性CONTROLLER </summary>
        public string CONTROLLER
        {
            get
            {
                return this.m_CONTROLLER;
            }
            set
            {
                this.m_CONTROLLER = value;
            }
        }
    }
    
    /// FNAREAEntity执行类
    public abstract class FNAREAEntityAction
    {
        
        private FNAREAEntityAction()
        {
        }
        
        public static void Save(FNAREAEntity obj)
        {
            if (obj!=null)
            {
                obj.Save();
            }
        }
        
        /// <summary>根据主键获取一个实体</summary>
        public static FNAREAEntity RetrieveAFNAREAEntity()
        {
            FNAREAEntity obj=new FNAREAEntity();
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static EntityContainer RetrieveFNAREAEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FNAREAEntity));
            return rc.AsEntityContainer();
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static DataTable GetFNAREAEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(FNAREAEntity));
            return rc.AsDataTable();
        }
    }
}
