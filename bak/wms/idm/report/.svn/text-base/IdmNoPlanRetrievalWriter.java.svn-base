// $Id: IdmNoPlanRetrievalWriter.java,v 1.4 2006/12/13 08:55:41 suresh Exp $
package jp.co.daifuku.wms.idm.report;

/*
 * Copyright 2000-2004 DAIFUKU Co.,Ltd. All Rights Reserved.
 *
 * This software is the proprietary information of DAIFUKU Co.,Ltd.
 * Use is subject to license terms.
 */

import java.sql.Connection;

import jp.co.daifuku.common.ReadWriteException;
import jp.co.daifuku.wms.base.common.DisplayUtil;
import jp.co.daifuku.wms.base.dbhandler.HostSendReportFinder;
import jp.co.daifuku.wms.base.dbhandler.HostSendSearchKey;
import jp.co.daifuku.wms.base.entity.HostSend;
import jp.co.daifuku.wms.base.entity.SystemDefine;
import jp.co.daifuku.wms.base.report.CSVWriter;
import jp.co.daifuku.wms.base.report.ReportOperation;

/**
 * <FONT COLOR="BLUE">
 * Designer : K.Toda <BR>
 * Maker : K.Toda <BR>
 *
 * <CODE>IdmNoPlanRetrievalWriter</CODE>?????????????????????????????????????????? <BR>
 * <CODE>IdmNoPlanRetrievalSCH</CODE>????????????????????????(DNHOSTSEND)????? <BR>
 * ???????????????????????????????? <BR>
 * ?????????????????? <BR>
 * <BR>
 * ??????????????(<CODE>startPrint()</CODE>????) <BR>
 * <DIR>
 *	1.<CODE>IdmNoPlanRetrievalSCH</CODE>????????????????????(DNHOSTSEND)?????????? <BR>
 *	2.???1???????????????????0???????false?????????? <BR>
 *	3.??????????? <BR>
 *  4.?????????????true?????? <BR>
 *    ?????????????????false?????? <BR>
 * <BR>
 * 	<?????>*???? <BR><DIR>
 * 	  ???No * <BR></DIR>
 * <BR>
 * 	<????> <BR><DIR>
 *    ???No <BR></DIR>
 * <BR>
 *  <????> <BR><DIR>
 *    1.????????????? <BR>
 *    2.???????? <BR>
 *    3.???·???????? <BR></DIR>
 * <BR>
 *	<?????> <BR><DIR>
 *	  ????		:DB?? <BR>
 *	  ??			:????? + ???? <BR>
 *	  ???		:??? <BR>
 *    ???		:??????+????? <BR>
 *	  ?????	:????? <BR>
 *	  ????		:???? <BR>
 *    ??			:???·????? <BR>
 *    ???		:?????????? <BR>
 *    ?????	:????? <BR>
 *    ?????	:????? <BR>
 *    ??????	:?????/????? <BR>
 *    ??????	:?????%????? <BR>
 *    ????		:?????????
 *    ???ITF	:???ITF <BR>
 *    ???ITF	:???ITF <BR><?DIR>
 * </DIR>
 * </FONT>
 * <BR>
 * <TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0">
 * <TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor"><TD>Date</TD><TD>Name</TD><TD>Comment</TD></TR>
 * <TR><TD>2005/04/07</TD><TD>K.Toda</TD><TD>created this class</TD></TR>
 * </TABLE>
 * <BR>
 * @version $Revision: 1.4 $, $Date: 2006/12/13 08:55:41 $
 * @author  $Author: suresh $
 */
public class IdmNoPlanRetrievalWriter extends CSVWriter
{
	// Class fields --------------------------------------------------

	// Class variables -----------------------------------------------
	/**
	 * ???No.
	 */
	private String wBatchNo;

	// Class method --------------------------------------------------
	/**
	 * ?????????????????
	 *
	 * @return ????????
	 */
	public static String getVersion()
	{
		return ("$Revision: 1.4 $,$Date: 2006/12/13 08:55:41 $");
	}

	// Constructors --------------------------------------------------
	/**
	 * IdmNoPlanRetrievalWriter ?????????????
	 *
	 * @param conn<CODE>Connection</CODE>
	 */
	public IdmNoPlanRetrievalWriter(Connection conn)
	{
		super(conn);
	}

	// Public methods ------------------------------------------------
	/**
	 * ???No????????
	 * @param batchNumber ????????No
	 */
	public void setBatchNumber(String batchNumber)
	{
		wBatchNo = batchNumber;
	}
	/**
	 * ???No???????
	 * @return ???No
	 */
	public String getBatchNumber()
	{
		return wBatchNo;
	}

	/**
	 * ???????????CSV?????????????????? <BR>
	 * ???1???????????????????0???????false?????????? <BR>
	 * ??????????? <BR>
	 * ??????????????true?????? <BR>
	 * ?????????????????false?????? <BR>
	 *
	 * @return ???????????????true????????????false
	 */
	public boolean startPrint()
	{
		HostSendReportFinder reportFinder = new HostSendReportFinder(wConn);
		try
		{
			// ?????????????????????
			if(wBatchNo==null)
			{
				wMessage = "6007034";
				return false;

			}
			// ????????
			HostSendSearchKey searchKey = new HostSendSearchKey();
			// ???No?????????
			searchKey.setBatchNo(wBatchNo);
			searchKey.setJobType(SystemDefine.JOB_TYPE_EX_RETRIEVAL);
			// ?????????
			searchKey.setConsignorCodeCollect("");
			searchKey.setConsignorNameCollect("");
			searchKey.setWorkDateCollect("");
			searchKey.setItemCodeCollect("");
			searchKey.setItemName1Collect("");
			searchKey.setCasePieceFlagCollect("");
			searchKey.setLocationNoCollect("");
			searchKey.setEnteringQtyCollect("");
			searchKey.setBundleEnteringQtyCollect("");
			searchKey.setBundleItfCollect("");
			searchKey.setItfCollect("");
			searchKey.setUseByDateCollect("");
			searchKey.setResultQtyCollect("");
			searchKey.setCustomerCodeCollect("");
			searchKey.setCustomerName1Collect("");

			// ????????
			searchKey.setLocationNoOrder(1, true);
			searchKey.setItemCodeOrder(2, true);
			searchKey.setCasePieceFlagOrder(3, true);


			// ????????
			int count = reportFinder.search(searchKey);
			// ???????
			if (count <= 0)
			{
				// ??????????????
				wMessage = "6003010";
				reportFinder.close();
				return false;
			}

			// ?????????
			if (!createPrintWriter(FNAME_IDMRETRIEVAL))
			{
				return false;
			}

            //append header
            wStrText.append(HEADER_IDMRETRIEVAL);

			HostSend hostSend[] = null;

			// 	????????????100?????????????????
			while (reportFinder.isNext())
			{
				// ???????100?????
				hostSend = (HostSend[]) reportFinder.getEntities(100);
				for (int i = 0; i < hostSend.length; i++)
				{

					wStrText.append(re + "");
					// ?????
					wStrText.append(ReportOperation.format(hostSend[i].getConsignorCode()) + tb);
					// ????
					wStrText.append(ReportOperation.format(hostSend[i].getConsignorName()) + tb);
					// ???
					wStrText.append(ReportOperation.format(hostSend[i].getWorkDate()) + tb);
					// ??????
					wStrText.append(ReportOperation.format(hostSend[i].getCustomerCode()) + tb);
					// ?????
					wStrText.append(ReportOperation.format(hostSend[i].getCustomerName1()) + tb);
					// ??
					wStrText.append(ReportOperation.format(hostSend[i].getLocationNo()) + tb);
					// ?????
					wStrText.append(ReportOperation.format(hostSend[i].getItemCode()) + tb);
					// ????
					wStrText.append(ReportOperation.format(hostSend[i].getItemName1()) + tb);
					// ???/?????
					wStrText.append(ReportOperation.format(DisplayUtil.getPieceCaseValue(hostSend[i].getCasePieceFlag())) + tb);
					// ?????
					wStrText.append(ReportOperation.format(Integer.toString(hostSend[i].getEnteringQty()))+ tb);
					// ?????
					wStrText.append(ReportOperation.format(Integer.toString(hostSend[i].getBundleEnteringQty()))+ tb);
					// ?????
					wStrText.append(DisplayUtil.getCaseQty(hostSend[i].getResultQty(), hostSend[i].getEnteringQty(), hostSend[i].getCasePieceFlag()) + tb);
					//?????
					wStrText.append(DisplayUtil.getPieceQty(hostSend[i].getResultQty(), hostSend[i].getEnteringQty(), hostSend[i].getCasePieceFlag()) + tb);
					// ???ITF
					wStrText.append(ReportOperation.format(hostSend[i].getItf()) + tb);
					// ???ITF
					wStrText.append(ReportOperation.format(hostSend[i].getBundleItf()) + tb);
					// ????
					wStrText.append(ReportOperation.format(hostSend[i].getUseByDate()));
					// ????
					wPWriter.print(wStrText);
					wStrText.setLength(0);
				}
			}
			// ?????????
			wPWriter.close();

			// UCXSingle???
			if (!executeUCX(JOBID_IDMRETRIEVAL))
			{
				//??????????????????????
				return false;
			}

			// ?????????????????????
			ReportOperation.createBackupFile(wFileName);
		}
		catch (ReadWriteException e)
		{
			// ??????????????????????
			setMessage("6007034");
			return false;
		}
		finally
		{
			try
			{
				// ???????????????????????????
				reportFinder.close();
			}
			catch (ReadWriteException e)
			{
				// ?????????????????????????????
				setMessage("6007002");
				return false;
			}
		}
		return true;
	}

	// Package methods -----------------------------------------------

	// Protected methods ---------------------------------------------

	// Private methods -----------------------------------------------

}
//end of class
