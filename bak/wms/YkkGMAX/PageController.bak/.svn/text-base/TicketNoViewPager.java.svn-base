package jp.co.daifuku.wms.YkkGMAX.PageController;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import jp.co.daifuku.bluedog.ui.control.ListCell;
import jp.co.daifuku.bluedog.ui.control.Page;
import jp.co.daifuku.bluedog.ui.control.Pager;
import jp.co.daifuku.wms.YkkGMAX.Entities.TicketNoViewEntity;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKDBException;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKSQLException;
import jp.co.daifuku.wms.YkkGMAX.ListProxy.TicketNoViewListProxy;
import jp.co.daifuku.wms.YkkGMAX.Popup.TicketNoViewBusiness;
import jp.co.daifuku.wms.YkkGMAX.Utils.ASRSInfoCentre;
import jp.co.daifuku.wms.YkkGMAX.Utils.ConnectionManager;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugLevel;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugPrinter;

public class TicketNoViewPager implements IPageable
{
	private final String TICKET_NO = "TICKET_NO";

	private Page page = null;

	private Pager pager = null;
	

	public TicketNoViewPager(Page page, Pager pager)
	{
		this.page = page;
		this.pager = pager;
	}


	public List getList(int beginningPos) throws YKKDBException, YKKSQLException
	{
		Connection conn = null;
		List ticketNoViewEntityList = new ArrayList();

		try
		{
			conn = ConnectionManager.getConnection();

			ASRSInfoCentre centre = new ASRSInfoCentre(conn);

			ticketNoViewEntityList = centre.getTicketNoViewList(getTicketNo(), beginningPos, pager.getPage());

		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					ex.setResourceKey("7200002");
					throw ex;
				}
			}
		}
		return ticketNoViewEntityList;
	}

	public String getTicketNo()
	{
		return (String)page.getSession().getAttribute(TICKET_NO);
	}
	
	public ListCell getListCell()
	{
		return ((TicketNoViewBusiness)page).lst_TicketNoView;
	}


	public Pager getPager()
	{
		return pager;
	}


	public int getTotalCount() throws YKKDBException, YKKSQLException
	{
		Connection conn = null;
		int totalCount = 0;

		try
		{
			conn = ConnectionManager.getConnection();
			ASRSInfoCentre centre = new ASRSInfoCentre(conn);
			totalCount = centre.getTicketNoViewCount(getTicketNo());
		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					ex.setResourceKey("7200002");
					throw ex;
				}
			}
		}
		return totalCount;
	}


	public void setRowValue(ListCell listCell, int rowNum, Object object)
	{
		TicketNoViewListProxy listProxy = new TicketNoViewListProxy(listCell);
		
		TicketNoViewEntity entity = (TicketNoViewEntity)object;
		
		listProxy.setRowValueByEntity(entity, rowNum);
		
	}
	
	
}
