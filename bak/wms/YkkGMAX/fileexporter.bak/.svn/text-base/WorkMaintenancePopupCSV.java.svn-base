package jp.co.daifuku.wms.YkkGMAX.fileexporter;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import jp.co.daifuku.bluedog.ui.control.Page;
import jp.co.daifuku.wms.YkkGMAX.Entities.WorkMaintenancePopupEntity;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKDBException;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKSQLException;
import jp.co.daifuku.wms.YkkGMAX.Utils.ASRSInfoCentre;
import jp.co.daifuku.wms.YkkGMAX.Utils.ConnectionManager;
import jp.co.daifuku.wms.YkkGMAX.Utils.StringUtils;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugLevel;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugPrinter;

public class WorkMaintenancePopupCSV implements IExportable
{

	private final String TRANSFER_TYPE = "TRANSFER_TYPE";

	private final String STATION = "STATION";

	private final String DIVISION = "DIVISION";

	private Page page;

	public WorkMaintenancePopupCSV(Page page)
	{
		this.page = page;
	}

	public int getCount() throws YKKSQLException, YKKDBException
	{
		Connection conn = null;
		int count = 0;
		ASRSInfoCentre centre = null;
		try
		{
			conn = ConnectionManager.getConnection();
			centre = new ASRSInfoCentre(conn);
			count = centre.getWorkMaintenancePopupCount(getTransferType(),
					getStation(), getDivision());
		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					ex.setResourceKey("7200002");
					throw ex;
				}
			}
		}
		return count;
	}

	private String getDivision()
	{
		return (String) page.getSession().getAttribute(DIVISION);
	}

	private String getStation()
	{
		return (String) page.getSession().getAttribute(STATION);
	}

	private String getTransferType()
	{
		return (String) page.getSession().getAttribute(TRANSFER_TYPE);
	}

	public String getHead()
	{
		String head = "搬送区分,状态,MCKEY,站台,搬送源站台/目标站台,货位编号,箱子编号,物料编号,品名1,品名2,品名3,搬送个数";
		return head;
	}

	public String getLine(Object object)
	{
		WorkMaintenancePopupEntity entity = (WorkMaintenancePopupEntity) object;

		String line = entity.getTransferType() + ",";
		line += entity.getStatus() + ",";
		line += entity.getMckey() + ",";
		line += entity.getStationNo() + ":" + entity.getStationName() + ",";
		line += entity.getMotoStationNo() + StringUtils.ToMark
				+ entity.getSakiStationNo() + ",";
		line += StringUtils
				.formatLocationNoFromDBToPage(entity.getLocationNo())
				+ ",";
		line += entity.getBucketNo() + ",";
		line += entity.getItemCode() + ",";
		line += entity.getItemName1() + ",";
		line += entity.getItemName2() + ",";
		line += entity.getItemName3() + ",";
		line += entity.getTransferCount() + ",";
		return line;
	}

	public List getList() throws YKKSQLException, YKKDBException
	{
		Connection conn = null;
		List workMaintenancePopupList = null;
		ASRSInfoCentre centre = null;
		try
		{
			conn = ConnectionManager.getConnection();
			centre = new ASRSInfoCentre(conn);
			workMaintenancePopupList = centre.getWorkMaintenancePopupList(
					getTransferType(), getStation(), getDivision());
		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					ex.setResourceKey("7200002");
					throw ex;
				}
			}
		}
		return workMaintenancePopupList;
	}

}
