package jp.co.daifuku.wms.YkkGMAX.fileexporter;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import jp.co.daifuku.bluedog.ui.control.Page;
import jp.co.daifuku.wms.YkkGMAX.Entities.MessageInfoEntity;
import jp.co.daifuku.wms.YkkGMAX.Entities.MessageInfoHead;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKDBException;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKSQLException;
import jp.co.daifuku.wms.YkkGMAX.Utils.ASRSInfoCentre;
import jp.co.daifuku.wms.YkkGMAX.Utils.ConnectionManager;
import jp.co.daifuku.wms.YkkGMAX.Utils.StringUtils;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugLevel;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugPrinter;

public class MessageInfoCSV implements IExportable
{
	private final String MESSAGE_INFO_HEAD = "MESSAGE_INFO_HEAD";
	private Page page;
	
	public MessageInfoCSV(Page page)
	{
		this.page = page;
	}

	public String getHead()
	{
		String head = "发生时间,受信区分,通信日志";
		return head;
	}

	public String getLine(Object object)
	{
		MessageInfoEntity entity = (MessageInfoEntity)object;
		
		String line = StringUtils.formatDateAndTimeFromDBToPage(entity.getTime()) + ",";
		line += entity.getMessageType() + ",";
		line += entity.getMessage();
		return line;
	}

	public List getList() throws YKKSQLException, YKKDBException
	{
		Connection conn = null;
		List messageInfoList = null;
		ASRSInfoCentre centre = null;
		try
		{
		    conn = ConnectionManager.getConnection();
		    centre = new ASRSInfoCentre(conn);
		    messageInfoList = centre.getMessageInfoList(getMessageInfoHead());
		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					    ex.setResourceKey("7200002");
					    throw ex;					
				}
			}
		}
		return messageInfoList;
	}

	public MessageInfoHead getMessageInfoHead()
	{
		return (MessageInfoHead)page.getSession().getAttribute(MESSAGE_INFO_HEAD);
	}

	public int getCount() throws YKKSQLException, YKKDBException
	{
		Connection conn = null;
		int count = 0;
		ASRSInfoCentre centre = null;
		try
		{
		    conn = ConnectionManager.getConnection();
		    centre = new ASRSInfoCentre(conn);
		    count = centre.getMessageInfoCount(getMessageInfoHead());
		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					    ex.setResourceKey("7200002");
					    throw ex;					
				}
			}
		}
		return count;
	}
}
