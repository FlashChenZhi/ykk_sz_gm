package jp.co.daifuku.wms.YkkGMAX.fileexporter;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import jp.co.daifuku.bluedog.ui.control.Page;
import jp.co.daifuku.wms.YkkGMAX.Entities.OvertimeStorageInfoEntity;
import jp.co.daifuku.wms.YkkGMAX.Entities.OvertimeStorageInfoHead;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKDBException;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKSQLException;
import jp.co.daifuku.wms.YkkGMAX.Utils.ASRSInfoCentre;
import jp.co.daifuku.wms.YkkGMAX.Utils.ConnectionManager;
import jp.co.daifuku.wms.YkkGMAX.Utils.StringUtils;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugLevel;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugPrinter;

public class OvertimeStorageInfoCSV implements IExportable
{
	private final String OVERTIME_STORAGE_INFO_HEAD = "OVERTIME_STORAGE_INFO_HEAD";
	private Page page;
	
	public OvertimeStorageInfoCSV(Page page)
	{
		this.page = page;
	}
	
	public String getLine(Object object)
	{
		OvertimeStorageInfoEntity entity = (OvertimeStorageInfoEntity) object;
		String line = StringUtils.formatDateFromDBToPage(entity.getDateTime()) + ",";
		
		line += entity.getItemCode() + ",";
		line += entity.getItemName1() + ",";
		line += entity.getItemName2() + ",";
		line += entity.getItemName3() + ",";
		line += entity.getColor() + ",";
		line += entity.getTicketNo() + ",";
		line += entity.getBucketNo() + ",";
		line += StringUtils.formatLocationNoFromDBToPage(entity.getLocationNo()) + ",";
		line += String.valueOf(entity.getInstockCount());
		return line;
	}

	public List getList() throws YKKSQLException, YKKDBException
	{
		Connection conn = null;
		List overtimeStorageInfoList = null;
		ASRSInfoCentre centre = null;
		try
		{
		    conn = ConnectionManager.getConnection();
		    centre = new ASRSInfoCentre(conn);
		    overtimeStorageInfoList = centre.getOvertimeStorageInfoList(getOvertimeStorageInfoHead());
		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					    ex.setResourceKey("7200002");
					    throw ex;					
				}
			}
		}
		return overtimeStorageInfoList;
	}
	
	public OvertimeStorageInfoHead getOvertimeStorageInfoHead()
	{
		return (OvertimeStorageInfoHead)page.getSession().getAttribute(OVERTIME_STORAGE_INFO_HEAD);
	}

	public String getHead()
	{
		String head = "时间,物料编号,品名1,品名2,品名3,颜色,生产票号,箱子编号,货位编号,在库数";
		return head;
	}

	public int getCount() throws YKKSQLException, YKKDBException
	{
		Connection conn = null;
		int count = 0;
		ASRSInfoCentre centre = null;
		try
		{
		    conn = ConnectionManager.getConnection();
		    centre = new ASRSInfoCentre(conn);
		    count = centre.getOvertimeStorageInfoCount(getOvertimeStorageInfoHead());
		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					    ex.setResourceKey("7200002");
					    throw ex;					
				}
			}
		}
		return count;
	}
}
