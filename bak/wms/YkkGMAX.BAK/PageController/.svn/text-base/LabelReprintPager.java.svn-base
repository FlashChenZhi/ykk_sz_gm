package jp.co.daifuku.wms.YkkGMAX.PageController;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import jp.co.daifuku.bluedog.ui.control.ListCell;
import jp.co.daifuku.bluedog.ui.control.Page;
import jp.co.daifuku.bluedog.ui.control.Pager;
import jp.co.daifuku.wms.YkkGMAX.Entities.LabelReprintEntity;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKDBException;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKSQLException;
import jp.co.daifuku.wms.YkkGMAX.ListProxy.LabelReprintListProxy;
import jp.co.daifuku.wms.YkkGMAX.Stockout.LableReprintBusiness;
import jp.co.daifuku.wms.YkkGMAX.Utils.ASRSInfoCentre;
import jp.co.daifuku.wms.YkkGMAX.Utils.ConnectionManager;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugLevel;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugPrinter;

public class LabelReprintPager implements IPageable
{
	private final String PRINT_TIME_TO = "PRINT_TIME_TO";
	private final String LABEL_TYPE = "LABEL_TYPE";
	private final String PRINT_NO = "PRINT_NO";
	private final String PRINT_TIME_FROM = "PRINT_TIME_FROM";
	private Page page = null;
	private Pager pager = null;

	public LabelReprintPager(Page page, Pager pager)
	{
		this.page = page;
		this.pager = pager;
	}

	public List getList(int beginningPos) throws YKKDBException,
			YKKSQLException
	{
		Connection conn = null;
		List labelReprintEntityList = new ArrayList();

		try
		{
			conn = ConnectionManager.getConnection();

			ASRSInfoCentre centre = new ASRSInfoCentre(conn);

			labelReprintEntityList = centre.getLabelReprintList(getPrintNo(),
					getLabelType(), getPrintTimeFrom(), getPrintTimeTo(),
					beginningPos, pager.getPage());

		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					ex.setResourceKey("7200002");
					throw ex;
				}
			}
		}
		return labelReprintEntityList;
	}

	private String getPrintTimeTo()
	{
		return (String) page.getSession().getAttribute(PRINT_TIME_TO);
	}

	private String getLabelType()
	{
		return (String) page.getSession().getAttribute(LABEL_TYPE).toString();
	}

	private String getPrintNo()
	{
		return (String) page.getSession().getAttribute(PRINT_NO);
	}

	private String getPrintTimeFrom()
	{
		return (String) page.getSession().getAttribute(PRINT_TIME_FROM);
	}

	public ListCell getListCell()
	{
		return ((LableReprintBusiness) page).lst_LableReprint;
	}

	public Pager getPager()
	{
		return pager;
	}

	public int getTotalCount() throws YKKDBException, YKKSQLException
	{
		Connection conn = null;
		int totalCount = 0;

		try
		{
			conn = ConnectionManager.getConnection();
			ASRSInfoCentre centre = new ASRSInfoCentre(conn);
			totalCount = centre.getLabelReprintCount(getPrintNo(),
					getLabelType(), getPrintTimeFrom(), getPrintTimeTo());
		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					ex.setResourceKey("7200002");
					throw ex;
				}
			}
		}
		return totalCount;
	}

	public void setRowValue(ListCell listCell, int rowNum, Object object)
	{
		LabelReprintListProxy listProxy = new LabelReprintListProxy(listCell,
				page);

		LabelReprintEntity entity = (LabelReprintEntity)object;

		listProxy.setRowValueByEntity(entity);

	}

}
