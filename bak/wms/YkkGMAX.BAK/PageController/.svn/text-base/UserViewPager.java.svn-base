package jp.co.daifuku.wms.YkkGMAX.PageController;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import jp.co.daifuku.bluedog.ui.control.ListCell;
import jp.co.daifuku.bluedog.ui.control.Page;
import jp.co.daifuku.bluedog.ui.control.Pager;
import jp.co.daifuku.wms.YkkGMAX.Entities.UserViewEntity;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKDBException;
import jp.co.daifuku.wms.YkkGMAX.Exceptions.YKKSQLException;
import jp.co.daifuku.wms.YkkGMAX.ListProxy.UserViewListProxy;
import jp.co.daifuku.wms.YkkGMAX.Popup.UserViewBusiness;
import jp.co.daifuku.wms.YkkGMAX.Utils.ASRSInfoCentre;
import jp.co.daifuku.wms.YkkGMAX.Utils.ConnectionManager;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugLevel;
import jp.co.daifuku.wms.YkkGMAX.Utils.Debugprinter.DebugPrinter;

public class UserViewPager implements IPageable
{
	private final String USER_ID = "USER_ID";
	private final String LOOSE_SEARCH_MODE = "LOOSE_SEARCH_MODE";
	private Page page = null;
	private Pager pager = null;

	public UserViewPager(Page page, Pager pager)
	{
		this.page = page;
		this.pager = pager;
	}
	
	public List getList(int beginningPos) throws YKKDBException,
			YKKSQLException
	{
		Connection conn = null;
		List bucketViewEntityList = new ArrayList();

		try
		{
			conn = ConnectionManager.getConnection();

			ASRSInfoCentre centre = new ASRSInfoCentre(conn);

			bucketViewEntityList = centre.getUserViewList(getUserID(),
					getLooseSearchMode(), beginningPos, pager.getPage());

		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					ex.setResourceKey("7200002");
					throw ex;
				}
			}
		}
		return bucketViewEntityList;
	}

	public String getLooseSearchMode()
	{
		return (String) page.getSession().getAttribute(LOOSE_SEARCH_MODE);
	}

	public String getUserID()
	{
		return (String) page.getSession().getAttribute(USER_ID);
	}
	
	public ListCell getListCell()
	{
		return ((UserViewBusiness)page).lst_UserView;
	}

	public Pager getPager()
	{
		return pager;
	}

	public int getTotalCount() throws YKKDBException, YKKSQLException
	{
		Connection conn = null;
		int totalCount = 0;

		try
		{
			conn = ConnectionManager.getConnection();
			ASRSInfoCentre centre = new ASRSInfoCentre(conn);
			totalCount = centre.getUserViewCount(getUserID(),
					getLooseSearchMode());
		}
		finally
		{
			if (conn != null)
			{
				try
				{
					conn.close();
				}
				catch (SQLException e)
				{
					DebugPrinter.print(DebugLevel.ERROR, e.getMessage());
					YKKDBException ex = new YKKDBException();
					ex.setResourceKey("7200002");
					throw ex;
				}
			}
		}
		return totalCount;
	}

	public void setRowValue(ListCell listCell, int rowNum, Object object)
	{
		UserViewListProxy listProxy = new UserViewListProxy(listCell);

		UserViewEntity entity = (UserViewEntity) object;

		listProxy.setRowValueByEntity(entity, rowNum);
	}

}
